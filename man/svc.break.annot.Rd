% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/break.annot.r
\name{svc.break.annot}
\alias{svc.break.annot}
\title{Identification of recurrently altered genes using SVC data}
\usage{
svc.break.annot(
  svc,
  genome.v = "hg19",
  genesgr = NULL,
  upstr = 50000,
  dnstr = 50000,
  svc.seg.size = 2e+05,
  verbose = TRUE
)
}
\arguments{
\item{svc}{(S4) an object of class svcnvio containing data type 'svc' validated by validate.svc}

\item{genome.v}{(character): either 'hg19' or 'hg38' accepted; reference genome version to retrieve gene annotations including genomic coordinates and strand}

\item{genesgr}{(S4) a GenomicRanges object containing gene annotations (if not NULL overides genome.v). It is crutial that the genome version 'genesgr' and the input 'sv' are the same. The GRanges object must contain 'strand' and a metadata field 'gene_id' with unique values. Seqnames are expected in the format (chr1, chr2, ...).}

\item{upstr}{(numeric) size in base pairs to define gene upstream region onto which breakpoint overlaps will be identified. The strand value, start and stop positions defined in genesgr will be used to create a GRanges object of upstream regions.}

\item{dnstr}{(numeric) size in base pairs to define gene downstream region onto which breakpoint overlaps will be identified. The strand value, start and stop positions defined in genesgr will be used to create a GRanges object of downstream regions.}

\item{svc.seg.size}{(numeric) base pairs for maximum allowed segmental variants (DEL, DUP, INV or INS) size. Larger segmental SVs are treated as translocations and only the breakpoint position will be overlapped with genomic features.}

\item{verbose}{(logical) whether to return internal messages}
}
\value{
an instance of the class 'break.annot' containing breakpoint mapping onto genes
}
\description{
Identify recurrently altered genes by strutural variants. The function will identify overlaps between genomic features (e.g. genes) and SVs breakpoints.
}
\examples{

# Initialize SVC data
svc <- validate.svc(svdat_lung_ccle)

svc.break.annot(svc, genome.v="hg19")
}
\keyword{Structural}
\keyword{annotation}
\keyword{variants,}
